name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  issue_comment:
    types: [created]

jobs:
  # Check if we should do a full run based on comment
  check-comment-trigger:
    if: github.event_name == 'issue_comment'
    runs-on: ubuntu-latest
    outputs:
      triggered: ${{ steps.check.outputs.triggered }}
    steps:
      - id: check
        run: |
          if [[ "${{ github.event.comment.body }}" == *"/check-all"* ]]; then
            echo "triggered=true" >> $GITHUB_OUTPUT
          else
            echo "triggered=false" >> $GITHUB_OUTPUT
          fi

  lint:
    needs: [check-comment-trigger]
    if: |
      always() &&
      (github.event_name != 'issue_comment' || needs.check-comment-trigger.result == 'success' && needs.check-comment-trigger.outputs.triggered == 'true')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for getting changed files
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort mypy pylint

    - name: Get changed files
      id: changed-files
      if: needs.check-comment-trigger.outputs.triggered != 'true'
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "files=$(git diff --name-only --diff-filter=ACMRT origin/${{ github.base_ref }} ${{ github.sha }} | grep '\.py$' | tr '\n' ' ')" >> $GITHUB_OUTPUT
        else
          echo "files=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.before }} ${{ github.sha }} | grep '\.py$' | tr '\n' ' ')" >> $GITHUB_OUTPUT
        fi
        
    - name: Check formatting with black
      run: |
        if [ "${{ needs.check-comment-trigger.outputs.triggered }}" == "true" ]; then
          echo "Running full check..."
          black --check .
        else
          if [ "${{ steps.changed-files.outputs.files }}" != "" ]; then
            echo "Checking files: ${{ steps.changed-files.outputs.files }}"
            black --check ${{ steps.changed-files.outputs.files }}
          fi
        fi
        
    - name: Check imports with isort
      run: |
        if [ "${{ needs.check-comment-trigger.outputs.triggered }}" == "true" ]; then
          echo "Running full check..."
          isort --check .
        else
          if [ "${{ steps.changed-files.outputs.files }}" != "" ]; then
            echo "Checking files: ${{ steps.changed-files.outputs.files }}"
            isort --check ${{ steps.changed-files.outputs.files }}
          fi
        fi
        
    - name: Type checking with mypy
      run: |
        if [ "${{ needs.check-comment-trigger.outputs.triggered }}" == "true" ]; then
          echo "Running full check..."
          mypy rgi
        else
          if [ "${{ steps.changed-files.outputs.files }}" != "" ]; then
            echo "Checking files: ${{ steps.changed-files.outputs.files }}"
            mypy ${{ steps.changed-files.outputs.files }}
          fi
        fi
        
    - name: Lint with pylint
      run: |
        if [ "${{ needs.check-comment-trigger.outputs.triggered }}" == "true" ]; then
          echo "Running full check..."
          pylint rgi --fail-under=9.8
        else
          if [ "${{ steps.changed-files.outputs.files }}" != "" ]; then
            echo "Checking files: ${{ steps.changed-files.outputs.files }}"
            pylint ${{ steps.changed-files.outputs.files }} --fail-under=9.8
          fi
        fi

  test:
    needs: [check-comment-trigger]
    if: |
      always() &&
      (github.event_name != 'issue_comment' || needs.check-comment-trigger.result == 'success' && needs.check-comment-trigger.outputs.triggered == 'true')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
        
    - name: Run tests
      run: |
        # For tests, we run all tests as changes might affect other parts of the codebase
        pytest rgi/tests/ -v 